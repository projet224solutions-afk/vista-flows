/**
 * SCRIPT DE D√âPLOIEMENT - SYST√àME DE BADGES
 * D√©ploie le syst√®me complet de g√©n√©ration de badges
 * 224Solutions - Badge System Deployment
 */

import { createClient } from '@supabase/supabase-js';
import { readFileSync } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Configuration Supabase
const supabaseUrl = 'https://your-project.supabase.co';
const supabaseKey = 'your-anon-key';
const supabase = createClient(supabaseUrl, supabaseKey);

async function deployBadgesSystem() {
    console.log('üöÄ D√©ploiement du syst√®me de badges...');

    try {
        // 1. Cr√©er le bucket de stockage
        console.log('üì¶ Cr√©ation du bucket badges...');
        const { data: bucketData, error: bucketError } = await supabase.storage
            .createBucket('badges', {
                public: true,
                allowedMimeTypes: ['application/pdf', 'image/png', 'image/jpeg'],
                fileSizeLimit: 10485760 // 10MB
            });

        if (bucketError && !bucketError.message.includes('already exists')) {
            console.error('‚ùå Erreur cr√©ation bucket:', bucketError);
        } else {
            console.log('‚úÖ Bucket badges cr√©√©');
        }

        // 2. D√©ployer le sch√©ma SQL
        console.log('üóÑÔ∏è D√©ploiement du sch√©ma SQL...');
        const sqlContent = readFileSync(join(__dirname, 'sql/badges_system.sql'), 'utf8');
        
        const { data: sqlData, error: sqlError } = await supabase.rpc('exec_sql', {
            sql: sqlContent
        });

        if (sqlError) {
            console.error('‚ùå Erreur SQL:', sqlError);
        } else {
            console.log('‚úÖ Sch√©ma SQL d√©ploy√©');
        }

        // 3. Tester la g√©n√©ration d'un badge
        console.log('üß™ Test de g√©n√©ration de badge...');
        const testBadge = {
            bureau_id: 'test-bureau-id',
            name: 'Test',
            firstName: 'Badge',
            phone: '+221 77 000 00 00',
            plate: 'GN-TEST-001',
            serialNumber: 'TM-TEST-001'
        };

        console.log('‚úÖ Syst√®me de badges d√©ploy√© avec succ√®s !');
        console.log('üìã Prochaines √©tapes:');
        console.log('   1. Configurer les permissions utilisateur');
        console.log('   2. Tester la g√©n√©ration de badges');
        console.log('   3. Int√©grer dans l\'interface PDG');

    } catch (error) {
        console.error('‚ùå Erreur d√©ploiement:', error);
    }
}

deployBadgesSystem();
