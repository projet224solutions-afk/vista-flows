name: Build iOS IPA

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build React app
        run: |
          npm run build
          echo "React app built successfully"
          
      - name: Install Capacitor
        run: |
          npm install -g @capacitor/cli
          npx cap add ios
          npx cap sync ios
          
      - name: Install CocoaPods
        run: |
          cd ios/App
          pod install
          
      - name: Import Code-Signing Certificates
        if: github.event_name != 'pull_request'
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATES_P12 }}
          p12-password: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
          
      - name: Download Provisioning Profile
        if: github.event_name != 'pull_request'
        uses: Apple-Actions/download-provisioning-profiles@v1
        with:
          bundle-id: com.224solutions.app
          profile-type: 'IOS_APP_STORE'
          issuer-id: ${{ secrets.APPLE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPLE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPLE_API_PRIVATE_KEY }}
          
      - name: Build iOS Archive
        run: |
          cd ios/App
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath $PWD/build/App.xcarchive \
            archive
            
      - name: Export IPA
        if: github.event_name != 'pull_request'
        run: |
          cd ios/App
          xcodebuild -exportArchive \
            -archivePath $PWD/build/App.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath $PWD/build/ipa
            
      - name: Create ExportOptions.plist
        if: github.event_name != 'pull_request'
        run: |
          cd ios/App
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>teamID</key>
              <string>${{ secrets.APPLE_TEAM_ID }}</string>
              <key>uploadBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
              <key>compileBitcode</key>
              <false/>
          </dict>
          </plist>
          EOF
          
      - name: Upload IPA artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: 224solutions-ios-ipa
          path: ios/App/build/ipa/*.ipa
          retention-days: 30
          
      - name: Upload to TestFlight
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: ios/App/build/ipa/App.ipa
          issuer-id: ${{ secrets.APPLE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPLE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPLE_API_PRIVATE_KEY }}
          
      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ios-v${{ github.run_number }}
          name: 224Solutions iOS v${{ github.run_number }}
          body: |
            üçé **Version iOS Automatique**
            
            üì± **Installation:**
            1. T√©l√©chargez via TestFlight (lien dans l'email)
            2. Ou installez l'IPA via Xcode/AltStore
            
            üöÄ **Fonctionnalit√©s:**
            - Interface bureau syndicat native iOS
            - Gestion des taxi-motards avec badges
            - Wallet int√©gr√© avec transactions
            - Authentification Touch ID/Face ID
            - Notifications push
            - Mode hors ligne
            
            üìä **Build:** ${{ github.sha }}
            üïí **Date:** ${{ github.event.head_commit.timestamp }}
          files: ios/App/build/ipa/*.ipa
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
